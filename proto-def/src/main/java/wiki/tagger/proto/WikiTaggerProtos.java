// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: WikiTagger.proto

package wiki.tagger.proto;

public final class WikiTaggerProtos {
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_wiki_tagger_proto_WikiCategory_descriptor;
    private static final com.google.protobuf.Descriptors.Descriptor
            internal_static_wiki_tagger_proto_WikiArticle_descriptor;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_wiki_tagger_proto_WikiCategory_fieldAccessorTable;
    private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internal_static_wiki_tagger_proto_WikiArticle_fieldAccessorTable;
    private static com.google.protobuf.Descriptors.FileDescriptor
            descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\020WikiTagger.proto\022\021wiki.tagger.proto\"/\n" +
                        "\014WikiCategory\022\020\n\010category\030\001 \002(\t\022\r\n\005label" +
                        "\030\002 \002(\t\"[\n\013WikiArticle\022\n\n\002id\030\001 \002(\t\022\r\n\005lab" +
                        "el\030\002 \002(\t\0221\n\010category\030\003 \003(\0132\037.wiki.tagger" +
                        ".proto.WikiCategoryB%\n\021wiki.tagger.proto" +
                        "B\020WikiTaggerProtos"
        };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
                new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
                    public com.google.protobuf.ExtensionRegistry assignDescriptors(
                            com.google.protobuf.Descriptors.FileDescriptor root) {
                        descriptor = root;
                        return null;
                    }
                };
        com.google.protobuf.Descriptors.FileDescriptor
                .internalBuildGeneratedFileFrom(descriptorData,
                        new com.google.protobuf.Descriptors.FileDescriptor[]{
                        }, assigner);
        internal_static_wiki_tagger_proto_WikiCategory_descriptor =
                getDescriptor().getMessageTypes().get(0);
        internal_static_wiki_tagger_proto_WikiCategory_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_wiki_tagger_proto_WikiCategory_descriptor,
                new java.lang.String[]{"Category", "Label",});
        internal_static_wiki_tagger_proto_WikiArticle_descriptor =
                getDescriptor().getMessageTypes().get(1);
        internal_static_wiki_tagger_proto_WikiArticle_fieldAccessorTable = new
                com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_wiki_tagger_proto_WikiArticle_descriptor,
                new java.lang.String[]{"Id", "Label", "Category",});
    }

    private WikiTaggerProtos() {
    }

    public static void registerAllExtensions(
            com.google.protobuf.ExtensionRegistry registry) {
    }

    public static com.google.protobuf.Descriptors.FileDescriptor
    getDescriptor() {
        return descriptor;
    }

    public interface WikiCategoryOrBuilder extends
            // @@protoc_insertion_point(interface_extends:wiki.tagger.proto.WikiCategory)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required string category = 1;</code>
         */
        boolean hasCategory();

        /**
         * <code>required string category = 1;</code>
         */
        java.lang.String getCategory();

        /**
         * <code>required string category = 1;</code>
         */
        com.google.protobuf.ByteString
        getCategoryBytes();

        /**
         * <code>required string label = 2;</code>
         */
        boolean hasLabel();

        /**
         * <code>required string label = 2;</code>
         */
        java.lang.String getLabel();

        /**
         * <code>required string label = 2;</code>
         */
        com.google.protobuf.ByteString
        getLabelBytes();
    }

    public interface WikiArticleOrBuilder extends
            // @@protoc_insertion_point(interface_extends:wiki.tagger.proto.WikiArticle)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required string id = 1;</code>
         */
        boolean hasId();

        /**
         * <code>required string id = 1;</code>
         */
        java.lang.String getId();

        /**
         * <code>required string id = 1;</code>
         */
        com.google.protobuf.ByteString
        getIdBytes();

        /**
         * <code>required string label = 2;</code>
         */
        boolean hasLabel();

        /**
         * <code>required string label = 2;</code>
         */
        java.lang.String getLabel();

        /**
         * <code>required string label = 2;</code>
         */
        com.google.protobuf.ByteString
        getLabelBytes();

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        java.util.List<wiki.tagger.proto.WikiTaggerProtos.WikiCategory>
        getCategoryList();

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        wiki.tagger.proto.WikiTaggerProtos.WikiCategory getCategory(int index);

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        int getCategoryCount();

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        java.util.List<? extends wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder>
        getCategoryOrBuilderList();

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder getCategoryOrBuilder(
                int index);
    }

    /**
     * Protobuf type {@code wiki.tagger.proto.WikiCategory}
     */
    public static final class WikiCategory extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:wiki.tagger.proto.WikiCategory)
            WikiCategoryOrBuilder {
        public static final int CATEGORY_FIELD_NUMBER = 1;
        public static final int LABEL_FIELD_NUMBER = 2;
        private static final WikiCategory defaultInstance;
        private static final long serialVersionUID = 0L;
        public static com.google.protobuf.Parser<WikiCategory> PARSER =
                new com.google.protobuf.AbstractParser<WikiCategory>() {
                    public WikiCategory parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new WikiCategory(input, extensionRegistry);
                    }
                };
        private final com.google.protobuf.UnknownFieldSet unknownFields;
        private int bitField0_;
        private java.lang.Object category_;
        private java.lang.Object label_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use WikiCategory.newBuilder() to construct.
        private WikiCategory(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private WikiCategory(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private WikiCategory(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            category_ = bs;
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            label_ = bs;
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static WikiCategory getDefaultInstance() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiCategory_descriptor;
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiCategory parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(wiki.tagger.proto.WikiTaggerProtos.WikiCategory prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public WikiCategory getDefaultInstanceForType() {
            return defaultInstance;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiCategory_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            wiki.tagger.proto.WikiTaggerProtos.WikiCategory.class, wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder.class);
        }

        @java.lang.Override
        public com.google.protobuf.Parser<WikiCategory> getParserForType() {
            return PARSER;
        }

        /**
         * <code>required string category = 1;</code>
         */
        public boolean hasCategory() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required string category = 1;</code>
         */
        public java.lang.String getCategory() {
            java.lang.Object ref = category_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    category_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string category = 1;</code>
         */
        public com.google.protobuf.ByteString
        getCategoryBytes() {
            java.lang.Object ref = category_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                category_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>required string label = 2;</code>
         */
        public boolean hasLabel() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>required string label = 2;</code>
         */
        public java.lang.String getLabel() {
            java.lang.Object ref = label_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    label_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string label = 2;</code>
         */
        public com.google.protobuf.ByteString
        getLabelBytes() {
            java.lang.Object ref = label_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                label_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        private void initFields() {
            category_ = "";
            label_ = "";
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasCategory()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLabel()) {
                memoizedIsInitialized = 0;
                return false;
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getCategoryBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getLabelBytes());
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getCategoryBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getLabelBytes());
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code wiki.tagger.proto.WikiCategory}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:wiki.tagger.proto.WikiCategory)
                wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder {
            private int bitField0_;
            private java.lang.Object category_ = "";
            private java.lang.Object label_ = "";

            // Construct using wiki.tagger.proto.WikiTaggerProtos.WikiCategory.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiCategory_descriptor;
            }

            private static Builder create() {
                return new Builder();
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiCategory_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                wiki.tagger.proto.WikiTaggerProtos.WikiCategory.class, wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                }
            }

            public Builder clear() {
                super.clear();
                category_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                label_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiCategory_descriptor;
            }

            public wiki.tagger.proto.WikiTaggerProtos.WikiCategory getDefaultInstanceForType() {
                return wiki.tagger.proto.WikiTaggerProtos.WikiCategory.getDefaultInstance();
            }

            public wiki.tagger.proto.WikiTaggerProtos.WikiCategory build() {
                wiki.tagger.proto.WikiTaggerProtos.WikiCategory result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public wiki.tagger.proto.WikiTaggerProtos.WikiCategory buildPartial() {
                wiki.tagger.proto.WikiTaggerProtos.WikiCategory result = new wiki.tagger.proto.WikiTaggerProtos.WikiCategory(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.category_ = category_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.label_ = label_;
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof wiki.tagger.proto.WikiTaggerProtos.WikiCategory) {
                    return mergeFrom((wiki.tagger.proto.WikiTaggerProtos.WikiCategory) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(wiki.tagger.proto.WikiTaggerProtos.WikiCategory other) {
                if (other == wiki.tagger.proto.WikiTaggerProtos.WikiCategory.getDefaultInstance()) return this;
                if (other.hasCategory()) {
                    bitField0_ |= 0x00000001;
                    category_ = other.category_;
                    onChanged();
                }
                if (other.hasLabel()) {
                    bitField0_ |= 0x00000002;
                    label_ = other.label_;
                    onChanged();
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasCategory()) {

                    return false;
                }
                if (!hasLabel()) {

                    return false;
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                wiki.tagger.proto.WikiTaggerProtos.WikiCategory parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (wiki.tagger.proto.WikiTaggerProtos.WikiCategory) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required string category = 1;</code>
             */
            public boolean hasCategory() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required string category = 1;</code>
             */
            public java.lang.String getCategory() {
                java.lang.Object ref = category_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        category_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string category = 1;</code>
             */
            public Builder setCategory(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                category_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string category = 1;</code>
             */
            public com.google.protobuf.ByteString
            getCategoryBytes() {
                java.lang.Object ref = category_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    category_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string category = 1;</code>
             */
            public Builder setCategoryBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                category_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string category = 1;</code>
             */
            public Builder clearCategory() {
                bitField0_ = (bitField0_ & ~0x00000001);
                category_ = getDefaultInstance().getCategory();
                onChanged();
                return this;
            }

            /**
             * <code>required string label = 2;</code>
             */
            public boolean hasLabel() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>required string label = 2;</code>
             */
            public java.lang.String getLabel() {
                java.lang.Object ref = label_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        label_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string label = 2;</code>
             */
            public Builder setLabel(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                label_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string label = 2;</code>
             */
            public com.google.protobuf.ByteString
            getLabelBytes() {
                java.lang.Object ref = label_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    label_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string label = 2;</code>
             */
            public Builder setLabelBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                label_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string label = 2;</code>
             */
            public Builder clearLabel() {
                bitField0_ = (bitField0_ & ~0x00000002);
                label_ = getDefaultInstance().getLabel();
                onChanged();
                return this;
            }

            // @@protoc_insertion_point(builder_scope:wiki.tagger.proto.WikiCategory)
        }

        static {
            defaultInstance = new WikiCategory(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:wiki.tagger.proto.WikiCategory)
    }

    /**
     * Protobuf type {@code wiki.tagger.proto.WikiArticle}
     */
    public static final class WikiArticle extends
            com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:wiki.tagger.proto.WikiArticle)
            WikiArticleOrBuilder {
        public static final int ID_FIELD_NUMBER = 1;
        public static final int LABEL_FIELD_NUMBER = 2;
        public static final int CATEGORY_FIELD_NUMBER = 3;
        private static final WikiArticle defaultInstance;
        private static final long serialVersionUID = 0L;
        public static com.google.protobuf.Parser<WikiArticle> PARSER =
                new com.google.protobuf.AbstractParser<WikiArticle>() {
                    public WikiArticle parsePartialFrom(
                            com.google.protobuf.CodedInputStream input,
                            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                        return new WikiArticle(input, extensionRegistry);
                    }
                };
        private final com.google.protobuf.UnknownFieldSet unknownFields;
        private int bitField0_;
        private java.lang.Object id_;
        private java.lang.Object label_;
        private java.util.List<wiki.tagger.proto.WikiTaggerProtos.WikiCategory> category_;
        private byte memoizedIsInitialized = -1;
        private int memoizedSerializedSize = -1;

        // Use WikiArticle.newBuilder() to construct.
        private WikiArticle(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private WikiArticle(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private WikiArticle(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields =
                    com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields,
                                    extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            id_ = bs;
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            label_ = bs;
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                category_ = new java.util.ArrayList<wiki.tagger.proto.WikiTaggerProtos.WikiCategory>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            category_.add(input.readMessage(wiki.tagger.proto.WikiTaggerProtos.WikiCategory.PARSER, extensionRegistry));
                            break;
                        }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(
                        e.getMessage()).setUnfinishedMessage(this);
            } finally {
                if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                    category_ = java.util.Collections.unmodifiableList(category_);
                }
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static WikiArticle getDefaultInstance() {
            return defaultInstance;
        }

        public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
            return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiArticle_descriptor;
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseFrom(
                com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseFrom(
                com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseFrom(
                byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseDelimitedFrom(
                java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseFrom(
                com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static wiki.tagger.proto.WikiTaggerProtos.WikiArticle parseFrom(
                com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public static Builder newBuilder(wiki.tagger.proto.WikiTaggerProtos.WikiArticle prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public WikiArticle getDefaultInstanceForType() {
            return defaultInstance;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
            return this.unknownFields;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
            return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiArticle_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            wiki.tagger.proto.WikiTaggerProtos.WikiArticle.class, wiki.tagger.proto.WikiTaggerProtos.WikiArticle.Builder.class);
        }

        @java.lang.Override
        public com.google.protobuf.Parser<WikiArticle> getParserForType() {
            return PARSER;
        }

        /**
         * <code>required string id = 1;</code>
         */
        public boolean hasId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required string id = 1;</code>
         */
        public java.lang.String getId() {
            java.lang.Object ref = id_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    id_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string id = 1;</code>
         */
        public com.google.protobuf.ByteString
        getIdBytes() {
            java.lang.Object ref = id_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                id_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>required string label = 2;</code>
         */
        public boolean hasLabel() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>required string label = 2;</code>
         */
        public java.lang.String getLabel() {
            java.lang.Object ref = label_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs =
                        (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    label_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string label = 2;</code>
         */
        public com.google.protobuf.ByteString
        getLabelBytes() {
            java.lang.Object ref = label_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b =
                        com.google.protobuf.ByteString.copyFromUtf8(
                                (java.lang.String) ref);
                label_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        public java.util.List<wiki.tagger.proto.WikiTaggerProtos.WikiCategory> getCategoryList() {
            return category_;
        }

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        public java.util.List<? extends wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder>
        getCategoryOrBuilderList() {
            return category_;
        }

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        public int getCategoryCount() {
            return category_.size();
        }

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        public wiki.tagger.proto.WikiTaggerProtos.WikiCategory getCategory(int index) {
            return category_.get(index);
        }

        /**
         * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
         */
        public wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder getCategoryOrBuilder(
                int index) {
            return category_.get(index);
        }

        private void initFields() {
            id_ = "";
            label_ = "";
            category_ = java.util.Collections.emptyList();
        }

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return true;
            if (isInitialized == 0) return false;

            if (!hasId()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasLabel()) {
                memoizedIsInitialized = 0;
                return false;
            }
            for (int i = 0; i < getCategoryCount(); i++) {
                if (!getCategory(i).isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output)
                throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getIdBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeBytes(2, getLabelBytes());
            }
            for (int i = 0; i < category_.size(); i++) {
                output.writeMessage(3, category_.get(i));
            }
            getUnknownFields().writeTo(output);
        }

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1) return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(1, getIdBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream
                        .computeBytesSize(2, getLabelBytes());
            }
            for (int i = 0; i < category_.size(); i++) {
                size += com.google.protobuf.CodedOutputStream
                        .computeMessageSize(3, category_.get(i));
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        @java.lang.Override
        protected java.lang.Object writeReplace()
                throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
                com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code wiki.tagger.proto.WikiArticle}
         */
        public static final class Builder extends
                com.google.protobuf.GeneratedMessage.Builder<Builder> implements
                // @@protoc_insertion_point(builder_implements:wiki.tagger.proto.WikiArticle)
                wiki.tagger.proto.WikiTaggerProtos.WikiArticleOrBuilder {
            private int bitField0_;
            private java.lang.Object id_ = "";
            private java.lang.Object label_ = "";
            private java.util.List<wiki.tagger.proto.WikiTaggerProtos.WikiCategory> category_ =
                    java.util.Collections.emptyList();
            private com.google.protobuf.RepeatedFieldBuilder<
                    wiki.tagger.proto.WikiTaggerProtos.WikiCategory, wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder, wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder> categoryBuilder_;

            // Construct using wiki.tagger.proto.WikiTaggerProtos.WikiArticle.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(
                    com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
                return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiArticle_descriptor;
            }

            private static Builder create() {
                return new Builder();
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
                return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiArticle_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(
                                wiki.tagger.proto.WikiTaggerProtos.WikiArticle.class, wiki.tagger.proto.WikiTaggerProtos.WikiArticle.Builder.class);
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getCategoryFieldBuilder();
                }
            }

            public Builder clear() {
                super.clear();
                id_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                label_ = "";
                bitField0_ = (bitField0_ & ~0x00000002);
                if (categoryBuilder_ == null) {
                    category_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                } else {
                    categoryBuilder_.clear();
                }
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
                return wiki.tagger.proto.WikiTaggerProtos.internal_static_wiki_tagger_proto_WikiArticle_descriptor;
            }

            public wiki.tagger.proto.WikiTaggerProtos.WikiArticle getDefaultInstanceForType() {
                return wiki.tagger.proto.WikiTaggerProtos.WikiArticle.getDefaultInstance();
            }

            public wiki.tagger.proto.WikiTaggerProtos.WikiArticle build() {
                wiki.tagger.proto.WikiTaggerProtos.WikiArticle result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public wiki.tagger.proto.WikiTaggerProtos.WikiArticle buildPartial() {
                wiki.tagger.proto.WikiTaggerProtos.WikiArticle result = new wiki.tagger.proto.WikiTaggerProtos.WikiArticle(this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.id_ = id_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.label_ = label_;
                if (categoryBuilder_ == null) {
                    if (((bitField0_ & 0x00000004) == 0x00000004)) {
                        category_ = java.util.Collections.unmodifiableList(category_);
                        bitField0_ = (bitField0_ & ~0x00000004);
                    }
                    result.category_ = category_;
                } else {
                    result.category_ = categoryBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof wiki.tagger.proto.WikiTaggerProtos.WikiArticle) {
                    return mergeFrom((wiki.tagger.proto.WikiTaggerProtos.WikiArticle) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(wiki.tagger.proto.WikiTaggerProtos.WikiArticle other) {
                if (other == wiki.tagger.proto.WikiTaggerProtos.WikiArticle.getDefaultInstance()) return this;
                if (other.hasId()) {
                    bitField0_ |= 0x00000001;
                    id_ = other.id_;
                    onChanged();
                }
                if (other.hasLabel()) {
                    bitField0_ |= 0x00000002;
                    label_ = other.label_;
                    onChanged();
                }
                if (categoryBuilder_ == null) {
                    if (!other.category_.isEmpty()) {
                        if (category_.isEmpty()) {
                            category_ = other.category_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                        } else {
                            ensureCategoryIsMutable();
                            category_.addAll(other.category_);
                        }
                        onChanged();
                    }
                } else {
                    if (!other.category_.isEmpty()) {
                        if (categoryBuilder_.isEmpty()) {
                            categoryBuilder_.dispose();
                            categoryBuilder_ = null;
                            category_ = other.category_;
                            bitField0_ = (bitField0_ & ~0x00000004);
                            categoryBuilder_ =
                                    com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                                            getCategoryFieldBuilder() : null;
                        } else {
                            categoryBuilder_.addAllMessages(other.category_);
                        }
                    }
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasId()) {

                    return false;
                }
                if (!hasLabel()) {

                    return false;
                }
                for (int i = 0; i < getCategoryCount(); i++) {
                    if (!getCategory(i).isInitialized()) {

                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(
                    com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws java.io.IOException {
                wiki.tagger.proto.WikiTaggerProtos.WikiArticle parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (wiki.tagger.proto.WikiTaggerProtos.WikiArticle) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            /**
             * <code>required string id = 1;</code>
             */
            public boolean hasId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required string id = 1;</code>
             */
            public java.lang.String getId() {
                java.lang.Object ref = id_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        id_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string id = 1;</code>
             */
            public Builder setId(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string id = 1;</code>
             */
            public com.google.protobuf.ByteString
            getIdBytes() {
                java.lang.Object ref = id_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    id_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string id = 1;</code>
             */
            public Builder setIdBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                id_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string id = 1;</code>
             */
            public Builder clearId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                id_ = getDefaultInstance().getId();
                onChanged();
                return this;
            }

            /**
             * <code>required string label = 2;</code>
             */
            public boolean hasLabel() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>required string label = 2;</code>
             */
            public java.lang.String getLabel() {
                java.lang.Object ref = label_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs =
                            (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        label_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string label = 2;</code>
             */
            public Builder setLabel(
                    java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                label_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string label = 2;</code>
             */
            public com.google.protobuf.ByteString
            getLabelBytes() {
                java.lang.Object ref = label_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b =
                            com.google.protobuf.ByteString.copyFromUtf8(
                                    (java.lang.String) ref);
                    label_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string label = 2;</code>
             */
            public Builder setLabelBytes(
                    com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                label_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string label = 2;</code>
             */
            public Builder clearLabel() {
                bitField0_ = (bitField0_ & ~0x00000002);
                label_ = getDefaultInstance().getLabel();
                onChanged();
                return this;
            }

            private void ensureCategoryIsMutable() {
                if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                    category_ = new java.util.ArrayList<wiki.tagger.proto.WikiTaggerProtos.WikiCategory>(category_);
                    bitField0_ |= 0x00000004;
                }
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public java.util.List<wiki.tagger.proto.WikiTaggerProtos.WikiCategory> getCategoryList() {
                if (categoryBuilder_ == null) {
                    return java.util.Collections.unmodifiableList(category_);
                } else {
                    return categoryBuilder_.getMessageList();
                }
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public int getCategoryCount() {
                if (categoryBuilder_ == null) {
                    return category_.size();
                } else {
                    return categoryBuilder_.getCount();
                }
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public wiki.tagger.proto.WikiTaggerProtos.WikiCategory getCategory(int index) {
                if (categoryBuilder_ == null) {
                    return category_.get(index);
                } else {
                    return categoryBuilder_.getMessage(index);
                }
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public Builder setCategory(
                    int index, wiki.tagger.proto.WikiTaggerProtos.WikiCategory value) {
                if (categoryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureCategoryIsMutable();
                    category_.set(index, value);
                    onChanged();
                } else {
                    categoryBuilder_.setMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public Builder setCategory(
                    int index, wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder builderForValue) {
                if (categoryBuilder_ == null) {
                    ensureCategoryIsMutable();
                    category_.set(index, builderForValue.build());
                    onChanged();
                } else {
                    categoryBuilder_.setMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public Builder addCategory(wiki.tagger.proto.WikiTaggerProtos.WikiCategory value) {
                if (categoryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureCategoryIsMutable();
                    category_.add(value);
                    onChanged();
                } else {
                    categoryBuilder_.addMessage(value);
                }
                return this;
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public Builder addCategory(
                    int index, wiki.tagger.proto.WikiTaggerProtos.WikiCategory value) {
                if (categoryBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    ensureCategoryIsMutable();
                    category_.add(index, value);
                    onChanged();
                } else {
                    categoryBuilder_.addMessage(index, value);
                }
                return this;
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public Builder addCategory(
                    wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder builderForValue) {
                if (categoryBuilder_ == null) {
                    ensureCategoryIsMutable();
                    category_.add(builderForValue.build());
                    onChanged();
                } else {
                    categoryBuilder_.addMessage(builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public Builder addCategory(
                    int index, wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder builderForValue) {
                if (categoryBuilder_ == null) {
                    ensureCategoryIsMutable();
                    category_.add(index, builderForValue.build());
                    onChanged();
                } else {
                    categoryBuilder_.addMessage(index, builderForValue.build());
                }
                return this;
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public Builder addAllCategory(
                    java.lang.Iterable<? extends wiki.tagger.proto.WikiTaggerProtos.WikiCategory> values) {
                if (categoryBuilder_ == null) {
                    ensureCategoryIsMutable();
                    com.google.protobuf.AbstractMessageLite.Builder.addAll(
                            values, category_);
                    onChanged();
                } else {
                    categoryBuilder_.addAllMessages(values);
                }
                return this;
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public Builder clearCategory() {
                if (categoryBuilder_ == null) {
                    category_ = java.util.Collections.emptyList();
                    bitField0_ = (bitField0_ & ~0x00000004);
                    onChanged();
                } else {
                    categoryBuilder_.clear();
                }
                return this;
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public Builder removeCategory(int index) {
                if (categoryBuilder_ == null) {
                    ensureCategoryIsMutable();
                    category_.remove(index);
                    onChanged();
                } else {
                    categoryBuilder_.remove(index);
                }
                return this;
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder getCategoryBuilder(
                    int index) {
                return getCategoryFieldBuilder().getBuilder(index);
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder getCategoryOrBuilder(
                    int index) {
                if (categoryBuilder_ == null) {
                    return category_.get(index);
                } else {
                    return categoryBuilder_.getMessageOrBuilder(index);
                }
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public java.util.List<? extends wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder>
            getCategoryOrBuilderList() {
                if (categoryBuilder_ != null) {
                    return categoryBuilder_.getMessageOrBuilderList();
                } else {
                    return java.util.Collections.unmodifiableList(category_);
                }
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder addCategoryBuilder() {
                return getCategoryFieldBuilder().addBuilder(
                        wiki.tagger.proto.WikiTaggerProtos.WikiCategory.getDefaultInstance());
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder addCategoryBuilder(
                    int index) {
                return getCategoryFieldBuilder().addBuilder(
                        index, wiki.tagger.proto.WikiTaggerProtos.WikiCategory.getDefaultInstance());
            }

            /**
             * <code>repeated .wiki.tagger.proto.WikiCategory category = 3;</code>
             */
            public java.util.List<wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder>
            getCategoryBuilderList() {
                return getCategoryFieldBuilder().getBuilderList();
            }

            private com.google.protobuf.RepeatedFieldBuilder<
                    wiki.tagger.proto.WikiTaggerProtos.WikiCategory, wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder, wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder>
            getCategoryFieldBuilder() {
                if (categoryBuilder_ == null) {
                    categoryBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                            wiki.tagger.proto.WikiTaggerProtos.WikiCategory, wiki.tagger.proto.WikiTaggerProtos.WikiCategory.Builder, wiki.tagger.proto.WikiTaggerProtos.WikiCategoryOrBuilder>(
                            category_,
                            ((bitField0_ & 0x00000004) == 0x00000004),
                            getParentForChildren(),
                            isClean());
                    category_ = null;
                }
                return categoryBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:wiki.tagger.proto.WikiArticle)
        }

        static {
            defaultInstance = new WikiArticle(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:wiki.tagger.proto.WikiArticle)
    }

    // @@protoc_insertion_point(outer_class_scope)
}
